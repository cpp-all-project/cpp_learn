{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "g++.exe - 打包和调试激活文件",
      "type": "cppdbg",
      "request": "launch",
      "program": "${fileDirname}\\${fileBasenameNoExtension}.exe",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      // 这个配置表明是否启动控制台， true 会出现额外的黑窗口， false 则会调用内置终端。由于黑窗口运行完之后会直接关闭，不利于查看运行结果，所以推荐设为 false
      "externalConsole": true,
      "MIMode": "gdb",
      // 调试器的路径。我们用 gdb 作为调试器，所以路径为 mingw64\\bin\\gdb.exe
      "miDebuggerPath": "D:\\soft-dev\\env\\mingw64\\bin\\gdb.exe",
      "setupCommands": [
        {
          "description": "为 gdb 启用整齐打印",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      // preLaunchTask ：前置运行任务，这里要和 tasks.json 里边的 label 属性一样
      // 因为调试前需要先编译出可执行文件，所以这里需要调用编译可执行文件的配置，先去执行编译任务，再进行debug
      // 也就是会先去调用前面的 tasks.json 里边定义的任务，生成一个 .exe 的文件
      "preLaunchTask": "C/C++: gcc.exe 生成活动文件"
    }
  ]
}
